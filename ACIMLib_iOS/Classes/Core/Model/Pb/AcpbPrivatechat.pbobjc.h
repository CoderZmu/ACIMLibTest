// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acpb.privatechat.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/ACGPBProtocolBuffers.h>
#else
 #import "ACGPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30004
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30004 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class ACPBAesKeyAndIV;
@class ACPBBriefDialog;
@class ACPBBriefDialogMessage;
@class ACPBChatMessage;
@class ACPBDialogMessage;
@class ACPBDialogMessageList;
@class ACPBReferenceDialogMessage;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - AcpbPrivatechatRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (ACGPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c ACGPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
ACGPB_FINAL @interface AcpbPrivatechatRoot : ACGPBRootObject
@end

#pragma mark - ACPBNewMessageNotificationResp

typedef ACGPB_ENUM(ACPBNewMessageNotificationResp_FieldNumber) {
  ACPBNewMessageNotificationResp_FieldNumber_ErrorCode = 1,
  ACPBNewMessageNotificationResp_FieldNumber_ErrorMessage = 2,
  ACPBNewMessageNotificationResp_FieldNumber_Seqno = 3,
};

/**
 * 服务器端主动推送: 有新信息提醒，需要移动终端到服务器拉取
 * 注: 服务器端主动推送 故没有对应的Req类
 **/
ACGPB_FINAL @interface ACPBNewMessageNotificationResp : ACGPBMessage

/** NewMessageNotificationRespCmdId = 0x60018000; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 服务器端最新的消息序号 */
@property(nonatomic, readwrite) int64_t seqno;

@end

#pragma mark - ACPBNewMessagePushResp

typedef ACGPB_ENUM(ACPBNewMessagePushResp_FieldNumber) {
  ACPBNewMessagePushResp_FieldNumber_ErrorCode = 1,
  ACPBNewMessagePushResp_FieldNumber_ErrorMessage = 2,
  ACPBNewMessagePushResp_FieldNumber_Msg = 3,
};

/**
 * 推送标题栏上方的新信息提醒，直接推送到移动端，类似GCM/APNS 注: 服务器端主动推送，故没有对应的Req类
 **/
ACGPB_FINAL @interface ACPBNewMessagePushResp : ACGPBMessage

/** NewMessagePushRespCmdId = 0x60018FFF; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** map<srcId, BriefDialogMessage>：srcId:发件人id,单聊是对方uid,群聊时为群groupId */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBBriefDialogMessage*> *msg;
/** The number of items in @c msg without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msg_Count;

@end

#pragma mark - ACPBStartTypingPrivateChatMessagePushResp

typedef ACGPB_ENUM(ACPBStartTypingPrivateChatMessagePushResp_FieldNumber) {
  ACPBStartTypingPrivateChatMessagePushResp_FieldNumber_ErrorCode = 1,
  ACPBStartTypingPrivateChatMessagePushResp_FieldNumber_ErrorMessage = 2,
  ACPBStartTypingPrivateChatMessagePushResp_FieldNumber_DestId = 3,
};

/**
 * 推送标题栏上方的新信息提醒，直接推送到移动端，类似GCM/APNS 注: 服务器端主动推送，故没有对应的Req类
 * 私聊 开始输入主动推送
 **/
ACGPB_FINAL @interface ACPBStartTypingPrivateChatMessagePushResp : ACGPBMessage

/** StartTypingPrivateChatMessagePushRespCmdId = 0x60018FFE; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 谁输入的 */
@property(nonatomic, readwrite) int64_t destId;

@end

#pragma mark - ACPBEndTypingPrivateChatMessagePushResp

typedef ACGPB_ENUM(ACPBEndTypingPrivateChatMessagePushResp_FieldNumber) {
  ACPBEndTypingPrivateChatMessagePushResp_FieldNumber_ErrorCode = 1,
  ACPBEndTypingPrivateChatMessagePushResp_FieldNumber_ErrorMessage = 2,
  ACPBEndTypingPrivateChatMessagePushResp_FieldNumber_DestId = 3,
};

/**
 * 私聊 结束输入主动推送
 **/
ACGPB_FINAL @interface ACPBEndTypingPrivateChatMessagePushResp : ACGPBMessage

/** EndTypingPrivateChatMessagePushRespCmdId = 0x60018FFD; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 谁输入的 */
@property(nonatomic, readwrite) int64_t destId;

@end

#pragma mark - ACPBSendPrivateChatMessageReq

typedef ACGPB_ENUM(ACPBSendPrivateChatMessageReq_FieldNumber) {
  ACPBSendPrivateChatMessageReq_FieldNumber_DestId = 1,
  ACPBSendPrivateChatMessageReq_FieldNumber_LocalId = 2,
  ACPBSendPrivateChatMessageReq_FieldNumber_MsgPreContent = 3,
  ACPBSendPrivateChatMessageReq_FieldNumber_MsgPostContent = 4,
  ACPBSendPrivateChatMessageReq_FieldNumber_MediaFlag = 5,
  ACPBSendPrivateChatMessageReq_FieldNumber_MediaConstructor = 6,
  ACPBSendPrivateChatMessageReq_FieldNumber_MediaAttribute = 7,
  ACPBSendPrivateChatMessageReq_FieldNumber_Extra = 8,
  ACPBSendPrivateChatMessageReq_FieldNumber_PushContent = 9,
  ACPBSendPrivateChatMessageReq_FieldNumber_MsgContent = 10,
  ACPBSendPrivateChatMessageReq_FieldNumber_IsSystem = 11,
  ACPBSendPrivateChatMessageReq_FieldNumber_ObjectName = 12,
  ACPBSendPrivateChatMessageReq_FieldNumber_Save = 13,
};

/**
 * 发送单聊消息
 **/
ACGPB_FINAL @interface ACPBSendPrivateChatMessageReq : ACGPBMessage

/** SendPrivateChatMessageReqCmdId = 0x60011001; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 消息的前置内容 (如果没有多媒体内容，preContent传空值，统一使用postContent) if 图片，图片地址，通知类消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPreContent;

/** 消息的后置内容 (如果没有多媒体内容，请使用这个字段) 纯文本消息 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPostContent;

/** 是否有多媒体内容 */
@property(nonatomic, readwrite) BOOL mediaFlag;

/** 消息中包涵的多媒体类型 取值为XLMediaObject其相应的constructor */
@property(nonatomic, readwrite) int32_t mediaConstructor;

/** 多媒体属性的JSON格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaAttribute;

@property(nonatomic, readwrite, copy, null_resettable) NSString *extra;

@property(nonatomic, readwrite, copy, null_resettable) NSString *pushContent;

@property(nonatomic, readwrite, copy, null_resettable) NSData *msgContent;

/** http服务发起的请求，如果是系统推送，不区分用户是否被封禁 */
@property(nonatomic, readwrite) BOOL isSystem;

/** 消息类型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *objectName;

/** 是否需要保存到db */
@property(nonatomic, readwrite) BOOL save;

@end

#pragma mark - ACPBSendPrivateChatMessageResp

typedef ACGPB_ENUM(ACPBSendPrivateChatMessageResp_FieldNumber) {
  ACPBSendPrivateChatMessageResp_FieldNumber_ErrorCode = 1,
  ACPBSendPrivateChatMessageResp_FieldNumber_ErrorMessage = 2,
  ACPBSendPrivateChatMessageResp_FieldNumber_LocalId = 3,
  ACPBSendPrivateChatMessageResp_FieldNumber_MsgId = 4,
  ACPBSendPrivateChatMessageResp_FieldNumber_MsgSendTime = 5,
  ACPBSendPrivateChatMessageResp_FieldNumber_Seqno = 6,
};

ACGPB_FINAL @interface ACPBSendPrivateChatMessageResp : ACGPBMessage

/** SendPrivateChatMessageRespCmdId = 0x60018001; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 服务器端消息id */
@property(nonatomic, readwrite) int64_t msgId;

/** 服务器端记录的发送时间戳 */
@property(nonatomic, readwrite) int64_t msgSendTime;

/** 游标 */
@property(nonatomic, readwrite) int64_t seqno;

@end

#pragma mark - ACPBReplyPrivateChatMessageReq

typedef ACGPB_ENUM(ACPBReplyPrivateChatMessageReq_FieldNumber) {
  ACPBReplyPrivateChatMessageReq_FieldNumber_DestId = 1,
  ACPBReplyPrivateChatMessageReq_FieldNumber_LocalId = 2,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgPreContent = 3,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgPostContent = 4,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaFlag = 5,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaConstructor = 6,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaAttribute = 7,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgIdReferenced = 8,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgSrcIdReferenced = 9,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgDestIdReferenced = 10,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgPreContentReferenced = 11,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgPostContentReferenced = 12,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaFlagReferenced = 13,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaConstructorReferenced = 14,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MediaAttributeReferenced = 15,
  ACPBReplyPrivateChatMessageReq_FieldNumber_MsgSendTimeReferenced = 16,
};

/**
 * reply单聊消息
 **/
ACGPB_FINAL @interface ACPBReplyPrivateChatMessageReq : ACGPBMessage

/** ReplyPrivateChatMessageReqCmdId = 0x60011002; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 消息的前置内容 (如果没有多媒体内容，preContent传空值，统一使用postContent) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPreContent;

/** 消息的后置内容 (如果没有多媒体内容，请使用这个字段) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPostContent;

/** 是否有多媒体内容 */
@property(nonatomic, readwrite) BOOL mediaFlag;

/** 消息中包涵的多媒体类型 取值为XLMediaObject其相应的constructor */
@property(nonatomic, readwrite) int32_t mediaConstructor;

/** 多媒体属性的JSON格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaAttribute;

/** 引用消息的id */
@property(nonatomic, readwrite) int64_t msgIdReferenced;

/** 引用消息的发件人id */
@property(nonatomic, readwrite) int64_t msgSrcIdReferenced;

/** 引用消息的收件人id */
@property(nonatomic, readwrite) int64_t msgDestIdReferenced;

/** 前置消息的内容(存放多媒体内容，如果没有多媒体内容，传空值) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPreContentReferenced;

/** 后置消息的内容 (如果没有多媒体内容，请使用这个字段) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPostContentReferenced;

/** 是否有多媒体内容 */
@property(nonatomic, readwrite) BOOL mediaFlagReferenced;

/** 消息中包涵的多媒体类型,取值为相应的XLMediaObject其constructor */
@property(nonatomic, readwrite) int32_t mediaConstructorReferenced;

/** 多媒体属性的JSON格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaAttributeReferenced;

/** 引用消息的发送时间 */
@property(nonatomic, readwrite) int64_t msgSendTimeReferenced;

@end

#pragma mark - ACPBReplyPrivateChatMessageResp

typedef ACGPB_ENUM(ACPBReplyPrivateChatMessageResp_FieldNumber) {
  ACPBReplyPrivateChatMessageResp_FieldNumber_ErrorCode = 1,
  ACPBReplyPrivateChatMessageResp_FieldNumber_ErrorMessage = 2,
  ACPBReplyPrivateChatMessageResp_FieldNumber_LocalId = 3,
  ACPBReplyPrivateChatMessageResp_FieldNumber_MsgId = 4,
  ACPBReplyPrivateChatMessageResp_FieldNumber_MsgSendTime = 5,
};

ACGPB_FINAL @interface ACPBReplyPrivateChatMessageResp : ACGPBMessage

/** ReplyPrivateChatMessageRespCmdId = 0x60018002; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 服务器端消息id */
@property(nonatomic, readwrite) int64_t msgId;

/** 服务器端记录的发送时间戳 */
@property(nonatomic, readwrite) int64_t msgSendTime;

@end

#pragma mark - ACPBForwardMessageToPrivateChatReq

typedef ACGPB_ENUM(ACPBForwardMessageToPrivateChatReq_FieldNumber) {
  ACPBForwardMessageToPrivateChatReq_FieldNumber_DestId = 1,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_LocalId = 2,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgPreContent = 3,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgPostContent = 4,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaFlag = 5,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaConstructor = 6,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaAttribute = 7,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgIdReferenced = 8,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgSrcIdReferenced = 9,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgDestIdReferenced = 10,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgPreContentReferenced = 11,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgPostContentReferenced = 12,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaFlagReferenced = 13,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaConstructorReferenced = 14,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MediaAttributeReferenced = 15,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgSendTimeReferenced = 16,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgGroupFlagReferenced = 17,
  ACPBForwardMessageToPrivateChatReq_FieldNumber_MsgGroupIdReferenced = 18,
};

/**
 * 转发消息
 **/
ACGPB_FINAL @interface ACPBForwardMessageToPrivateChatReq : ACGPBMessage

/** ForwardMessageToPrivateChatReqCmdId = 0x60011003; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 前置消息的内容 (如果没有多媒体内容，preContent传空值，) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPreContent;

/** 后置消息的内容 (如果没有多媒体内容，请使用这个字段) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPostContent;

/** 是否有多媒体内容 */
@property(nonatomic, readwrite) BOOL mediaFlag;

/** 消息中包涵的多媒体类型 取值为相应的SGMediaObject其constructor */
@property(nonatomic, readwrite) int32_t mediaConstructor;

/** 多媒体属性的JSON格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaAttribute;

/** 引用消息的id */
@property(nonatomic, readwrite) int64_t msgIdReferenced;

/** 引用消息的发件人uin */
@property(nonatomic, readwrite) int64_t msgSrcIdReferenced;

/** 引用消息的收件人uin */
@property(nonatomic, readwrite) int64_t msgDestIdReferenced;

/** 前置消息的内容 (如果没有多媒体内容，preContent传空值，) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPreContentReferenced;

/** 后置消息的内容 (如果没有多媒体内容，请使用这个字段) */
@property(nonatomic, readwrite, copy, null_resettable) NSString *msgPostContentReferenced;

/** 是否有多媒体内容 */
@property(nonatomic, readwrite) BOOL mediaFlagReferenced;

/** 消息中包涵的多媒体类型 取值为相应的SGMediaObject其constructor */
@property(nonatomic, readwrite) int32_t mediaConstructorReferenced;

/** 多媒体属性的JSON格式 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mediaAttributeReferenced;

/** 引用消息的发送时间 */
@property(nonatomic, readwrite) int64_t msgSendTimeReferenced;

/** 引用消息是否来自群消息 */
@property(nonatomic, readwrite) BOOL msgGroupFlagReferenced;

/** 如引用消息来自群消息，对应的群uin */
@property(nonatomic, readwrite) int64_t msgGroupIdReferenced;

@end

#pragma mark - ACPBForwardMessageToPrivateChatResp

typedef ACGPB_ENUM(ACPBForwardMessageToPrivateChatResp_FieldNumber) {
  ACPBForwardMessageToPrivateChatResp_FieldNumber_ErrorCode = 1,
  ACPBForwardMessageToPrivateChatResp_FieldNumber_ErrorMessage = 2,
  ACPBForwardMessageToPrivateChatResp_FieldNumber_LocalId = 3,
  ACPBForwardMessageToPrivateChatResp_FieldNumber_MsgId = 4,
  ACPBForwardMessageToPrivateChatResp_FieldNumber_MsgSendTime = 5,
};

ACGPB_FINAL @interface ACPBForwardMessageToPrivateChatResp : ACGPBMessage

/** ForwardMessageToPrivateChatRespCmdId=0x60018003; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** app端分配的消息id */
@property(nonatomic, readwrite) int64_t localId;

/** 服务器端消息id */
@property(nonatomic, readwrite) int64_t msgId;

/** 服务器端记录的发送时间戳 */
@property(nonatomic, readwrite) int64_t msgSendTime;

@end

#pragma mark - ACPBDeletePrivateChatDialogReq

typedef ACGPB_ENUM(ACPBDeletePrivateChatDialogReq_FieldNumber) {
  ACPBDeletePrivateChatDialogReq_FieldNumber_DestId = 1,
};

/**
 * 删除会话以及所有历史消息, 如果没收到消息则不会拉取到该Dialog
 **/
ACGPB_FINAL @interface ACPBDeletePrivateChatDialogReq : ACGPBMessage

/** DeletePrivateChatDialogReqCmdId = 0x60011004; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

@end

#pragma mark - ACPBDeletePrivateChatDialogResp

typedef ACGPB_ENUM(ACPBDeletePrivateChatDialogResp_FieldNumber) {
  ACPBDeletePrivateChatDialogResp_FieldNumber_ErrorCode = 1,
  ACPBDeletePrivateChatDialogResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBDeletePrivateChatDialogResp : ACGPBMessage

/** DeletePrivateChatDialogRespCmdId = 0x60018004; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBGetPrivateChatDialogDetailReq

typedef ACGPB_ENUM(ACPBGetPrivateChatDialogDetailReq_FieldNumber) {
  ACPBGetPrivateChatDialogDetailReq_FieldNumber_DestId = 1,
};

/**
 * 获取私聊会话详情
 **/
ACGPB_FINAL @interface ACPBGetPrivateChatDialogDetailReq : ACGPBMessage

/** GetPrivateChatDialogDetailReqCmdId = 0x60011006; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

@end

#pragma mark - ACPBGetPrivateChatDialogDetailResp

typedef ACGPB_ENUM(ACPBGetPrivateChatDialogDetailResp_FieldNumber) {
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_ErrorCode = 1,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_ErrorMessage = 2,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_DestId = 3,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_DialogTitle = 4,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_SmallAvatarURL = 5,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_OriginalAvatarURL = 6,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_QrcodeString = 7,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_StickyFlag = 8,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_MuteFlag = 9,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_BlockFlag = 10,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_BurnAfterReadingFlag = 11,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_TakeScreenshotFlag = 12,
  ACPBGetPrivateChatDialogDetailResp_FieldNumber_BurnAfterReadingTime = 13,
};

ACGPB_FINAL @interface ACPBGetPrivateChatDialogDetailResp : ACGPBMessage

/** GetPrivateChatDialogDetailRespCmdId = 0x60018006; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 目标会话id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 会话名称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *dialogTitle;

/** 头像缩略图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *smallAvatarURL;

/** 头像原图 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *originalAvatarURL;

/** 二维码对应的URI字符串 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *qrcodeString;

/** 是否置顶 */
@property(nonatomic, readwrite) BOOL stickyFlag;

/** 是否免打扰 */
@property(nonatomic, readwrite) BOOL muteFlag;

/** 是否拉黑 */
@property(nonatomic, readwrite) BOOL blockFlag;

/** 是否阅后即焚 */
@property(nonatomic, readwrite) BOOL burnAfterReadingFlag;

/** 是开启截屏通知 */
@property(nonatomic, readwrite) BOOL takeScreenshotFlag;

/** 当burnAfterReadingFlag为true的时候才有意义,阅后即焚时间 */
@property(nonatomic, readwrite) int64_t burnAfterReadingTime;

@end

#pragma mark - ACPBChatMessage

typedef ACGPB_ENUM(ACPBChatMessage_FieldNumber) {
  ACPBChatMessage_FieldNumber_DestId = 1,
  ACPBChatMessage_FieldNumber_MsgIdArray = 2,
};

ACGPB_FINAL @interface ACPBChatMessage : ACGPBMessage

/** 目标id */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 消息id列表 */
@property(nonatomic, readwrite, strong, null_resettable) ACGPBInt64Array *msgIdArray;
/** The number of items in @c msgIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgIdArray_Count;

@end

#pragma mark - ACPBSendPrivateChatReadAckReq

typedef ACGPB_ENUM(ACPBSendPrivateChatReadAckReq_FieldNumber) {
  ACPBSendPrivateChatReadAckReq_FieldNumber_ChatMessageArray = 1,
};

/**
 * 对方消息已读回执
 **/
ACGPB_FINAL @interface ACPBSendPrivateChatReadAckReq : ACGPBMessage

/** SendPrivateChatReadAckReqCmdId=0x60011024; */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ACPBChatMessage*> *chatMessageArray;
/** The number of items in @c chatMessageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatMessageArray_Count;

@end

#pragma mark - ACPBSendPrivateChatReadAckResp

typedef ACGPB_ENUM(ACPBSendPrivateChatReadAckResp_FieldNumber) {
  ACPBSendPrivateChatReadAckResp_FieldNumber_ErrorCode = 1,
  ACPBSendPrivateChatReadAckResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBSendPrivateChatReadAckResp : ACGPBMessage

/** SendPrivateChatReadAckRespCmdId=0x60018024; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBGetNewMessageReq

typedef ACGPB_ENUM(ACPBGetNewMessageReq_FieldNumber) {
  ACPBGetNewMessageReq_FieldNumber_Offset = 1,
  ACPBGetNewMessageReq_FieldNumber_Rows = 2,
};

/**
 * 获取新消息 注：不区分privatechat/groupchat
 **/
ACGPB_FINAL @interface ACPBGetNewMessageReq : ACGPBMessage

/** GetNewMessageReqCmdId = 0x60011027; */
@property(nonatomic, readwrite) int64_t offset;

/** 取正值，表示分页请求 */
@property(nonatomic, readwrite) int32_t rows;

@end

#pragma mark - ACPBGetNewMessageResp

typedef ACGPB_ENUM(ACPBGetNewMessageResp_FieldNumber) {
  ACPBGetNewMessageResp_FieldNumber_ErrorCode = 1,
  ACPBGetNewMessageResp_FieldNumber_ErrorMessage = 2,
  ACPBGetNewMessageResp_FieldNumber_Offset = 3,
  ACPBGetNewMessageResp_FieldNumber_Seqno = 4,
  ACPBGetNewMessageResp_FieldNumber_Msg = 5,
  ACPBGetNewMessageResp_FieldNumber_Reference = 6,
};

ACGPB_FINAL @interface ACPBGetNewMessageResp : ACGPBMessage

/** GetNewMessageRespCmdId = 0x60018027; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** 服务器端对应的消息偏移量d */
@property(nonatomic, readwrite) int64_t offset;

/** 服务器端最新的消息序号 */
@property(nonatomic, readwrite) int64_t seqno;

/** map<destId, DialogMessageList> 有新消息的会话对应的消息列表 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBDialogMessageList*> *msg;
/** The number of items in @c msg without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msg_Count;

/** map<msgIdReferenced, ReferenceDialogMessage> 引用的消息信息 */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBReferenceDialogMessage*> *reference;
/** The number of items in @c reference without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger reference_Count;

@end

#pragma mark - ACPBDialogMessageList

typedef ACGPB_ENUM(ACPBDialogMessageList_FieldNumber) {
  ACPBDialogMessageList_FieldNumber_DialogMessageArray = 1,
};

ACGPB_FINAL @interface ACPBDialogMessageList : ACGPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ACPBDialogMessage*> *dialogMessageArray;
/** The number of items in @c dialogMessageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger dialogMessageArray_Count;

@end

#pragma mark - ACPBUpdatePrivateChatDialogStickyConfigReq

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogStickyConfigReq_FieldNumber) {
  ACPBUpdatePrivateChatDialogStickyConfigReq_FieldNumber_DestId = 1,
  ACPBUpdatePrivateChatDialogStickyConfigReq_FieldNumber_StickyFlag = 2,
};

/**
 * 置顶设置
 **/
ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogStickyConfigReq : ACGPBMessage

/** UpdatePrivateChatDialogStickyConfigReqCmdId = 0x6001100A; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 是否置顶 */
@property(nonatomic, readwrite) BOOL stickyFlag;

@end

#pragma mark - ACPBUpdatePrivateChatDialogStickyConfigResp

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogStickyConfigResp_FieldNumber) {
  ACPBUpdatePrivateChatDialogStickyConfigResp_FieldNumber_ErrorCode = 1,
  ACPBUpdatePrivateChatDialogStickyConfigResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogStickyConfigResp : ACGPBMessage

/** UpdatePrivateChatDialogStickyConfigRespCmdId = 0x6001800A; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBUpdatePrivateChatDialogMuteConfigReq

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogMuteConfigReq_FieldNumber) {
  ACPBUpdatePrivateChatDialogMuteConfigReq_FieldNumber_DestId = 1,
  ACPBUpdatePrivateChatDialogMuteConfigReq_FieldNumber_MuteFlag = 2,
};

/**
 * 免打扰设置
 **/
ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogMuteConfigReq : ACGPBMessage

/** UpdatePrivateChatDialogMuteConfigReqCmdId = 0x6001100B; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 是否免打扰 */
@property(nonatomic, readwrite) BOOL muteFlag;

@end

#pragma mark - ACPBUpdatePrivateChatDialogMuteConfigResp

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogMuteConfigResp_FieldNumber) {
  ACPBUpdatePrivateChatDialogMuteConfigResp_FieldNumber_ErrorCode = 1,
  ACPBUpdatePrivateChatDialogMuteConfigResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogMuteConfigResp : ACGPBMessage

/** UpdatePrivateChatDialogMuteConfigRespCmdId = 0x6001800B; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBDeleteChatMessageReq

typedef ACGPB_ENUM(ACPBDeleteChatMessageReq_FieldNumber) {
  ACPBDeleteChatMessageReq_FieldNumber_DestId = 1,
  ACPBDeleteChatMessageReq_FieldNumber_MsgId = 2,
  ACPBDeleteChatMessageReq_FieldNumber_MsgIdListArray = 3,
};

/**
 * 删除消息
 **/
ACGPB_FINAL @interface ACPBDeleteChatMessageReq : ACGPBMessage

/** DeletePrivateChatMessageReqCmdId = 0x6001100D; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 待删除的消息id */
@property(nonatomic, readwrite) int64_t msgId;

/** 批量删除的消息Id列表 */
@property(nonatomic, readwrite, strong, null_resettable) ACGPBInt64Array *msgIdListArray;
/** The number of items in @c msgIdListArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger msgIdListArray_Count;

@end

#pragma mark - ACPBDeleteChatMessageResp

typedef ACGPB_ENUM(ACPBDeleteChatMessageResp_FieldNumber) {
  ACPBDeleteChatMessageResp_FieldNumber_ErrorCode = 1,
  ACPBDeleteChatMessageResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBDeleteChatMessageResp : ACGPBMessage

/** DeletePrivateChatMessageRespCmdId = 0x6001800D; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBDeletePrivateChatHistoryReq

typedef ACGPB_ENUM(ACPBDeletePrivateChatHistoryReq_FieldNumber) {
  ACPBDeletePrivateChatHistoryReq_FieldNumber_DestId = 1,
  ACPBDeletePrivateChatHistoryReq_FieldNumber_MsgId = 2,
};

/**
 * 删除所有历史消息, 该dialog还保留
 **/
ACGPB_FINAL @interface ACPBDeletePrivateChatHistoryReq : ACGPBMessage

/** DeletePrivateChatHistoryReqCmdId = 0x6001100E; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 待删除的消息id */
@property(nonatomic, readwrite) int64_t msgId;

@end

#pragma mark - ACPBCleanHistoryMessageReq

typedef ACGPB_ENUM(ACPBCleanHistoryMessageReq_FieldNumber) {
  ACPBCleanHistoryMessageReq_FieldNumber_DestId = 1,
  ACPBCleanHistoryMessageReq_FieldNumber_Type = 2,
  ACPBCleanHistoryMessageReq_FieldNumber_MsgTime = 3,
};

/**
 * 清除历史消息 不区分私聊和群聊
 **/
ACGPB_FINAL @interface ACPBCleanHistoryMessageReq : ACGPBMessage

/** DeletePrivateChatDialogReqCmdId = 0x60011004; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 0私聊 1群聊 */
@property(nonatomic, readwrite) int32_t type;

/** 删除消息时间戳 */
@property(nonatomic, readwrite) int64_t msgTime;

@end

#pragma mark - ACPBCleanHistoryMessageResp

typedef ACGPB_ENUM(ACPBCleanHistoryMessageResp_FieldNumber) {
  ACPBCleanHistoryMessageResp_FieldNumber_ErrorCode = 1,
  ACPBCleanHistoryMessageResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBCleanHistoryMessageResp : ACGPBMessage

/** DeletePrivateChatDialogRespCmdId = 0x60018004; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBDeletePrivateChatHistoryResp

typedef ACGPB_ENUM(ACPBDeletePrivateChatHistoryResp_FieldNumber) {
  ACPBDeletePrivateChatHistoryResp_FieldNumber_ErrorCode = 1,
  ACPBDeletePrivateChatHistoryResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBDeletePrivateChatHistoryResp : ACGPBMessage

/** DeletePrivateChatHistoryRespCmdId = 0x6001800E; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBGetBriefDialogListReq

typedef ACGPB_ENUM(ACPBGetBriefDialogListReq_FieldNumber) {
  ACPBGetBriefDialogListReq_FieldNumber_DestIdArray = 1,
};

/**
 * 获取会话概要信息 注: 同GetDialogListReq一样，该请求不区分 privatechat/groupchat
 **/
ACGPB_FINAL @interface ACPBGetBriefDialogListReq : ACGPBMessage

/** GetBriefDialogListReqCmdId = 0x6001101F; */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *destIdArray;
/** The number of items in @c destIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger destIdArray_Count;

@end

#pragma mark - ACPBGetBriefDialogListResp

typedef ACGPB_ENUM(ACPBGetBriefDialogListResp_FieldNumber) {
  ACPBGetBriefDialogListResp_FieldNumber_ErrorCode = 1,
  ACPBGetBriefDialogListResp_FieldNumber_ErrorMessage = 2,
  ACPBGetBriefDialogListResp_FieldNumber_NotExistDestIdArray = 3,
  ACPBGetBriefDialogListResp_FieldNumber_Seqno = 4,
  ACPBGetBriefDialogListResp_FieldNumber_BriefDialog = 5,
};

ACGPB_FINAL @interface ACPBGetBriefDialogListResp : ACGPBMessage

/** GetBriefDialogListRespCmdId = 0x6001801F; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** List<destId> 不存在会话的destId列表 */
@property(nonatomic, readwrite, strong, null_resettable) ACGPBInt64Array *notExistDestIdArray;
/** The number of items in @c notExistDestIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger notExistDestIdArray_Count;

/** 服务器端最新的消息序号 */
@property(nonatomic, readwrite) int64_t seqno;

/** Map<destId, BriefDialog> */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBBriefDialog*> *briefDialog;
/** The number of items in @c briefDialog without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger briefDialog_Count;

@end

#pragma mark - ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq_FieldNumber) {
  ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq_FieldNumber_DestId = 1,
  ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq_FieldNumber_BurnAfterReadingFlag = 2,
  ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq_FieldNumber_BurnAfterReadingTime = 3,
};

/**
 * 更新阅后即焚设置
 **/
ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogBurnAfterReadingConfigReq : ACGPBMessage

/** UpdatePrivateChatDialogBurnAfterReadingConfigReqCmdId = 0x60011014; */
@property(nonatomic, readwrite) int64_t destId;

/** 是否阅后即焚 */
@property(nonatomic, readwrite) BOOL burnAfterReadingFlag;

/** 当burnAfterReadingFlag为true的时候才有意义,阅后即焚时间 */
@property(nonatomic, readwrite) int64_t burnAfterReadingTime;

@end

#pragma mark - ACPBUpdatePrivateChatDialogBurnAfterReadingConfigResp

typedef ACGPB_ENUM(ACPBUpdatePrivateChatDialogBurnAfterReadingConfigResp_FieldNumber) {
  ACPBUpdatePrivateChatDialogBurnAfterReadingConfigResp_FieldNumber_ErrorCode = 1,
  ACPBUpdatePrivateChatDialogBurnAfterReadingConfigResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBUpdatePrivateChatDialogBurnAfterReadingConfigResp : ACGPBMessage

/** UpdatePrivateChatDialogBurnAfterReadingConfigRespCmdId = 0x60018014; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBGetDialogKeyReq

typedef ACGPB_ENUM(ACPBGetDialogKeyReq_FieldNumber) {
  ACPBGetDialogKeyReq_FieldNumber_DestIdArray = 1,
  ACPBGetDialogKeyReq_FieldNumber_ClientSign = 2,
};

/**
 * 获取会话密钥 注: 该请求不区分 privatechat/groupchat
 **/
ACGPB_FINAL @interface ACPBGetDialogKeyReq : ACGPBMessage

/** GetDialogKeyReqCmdId = 0x60011015; */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<NSString*> *destIdArray;
/** The number of items in @c destIdArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger destIdArray_Count;

/** 客户端签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *clientSign;

@end

#pragma mark - ACPBGetDialogKeyResp

typedef ACGPB_ENUM(ACPBGetDialogKeyResp_FieldNumber) {
  ACPBGetDialogKeyResp_FieldNumber_ErrorCode = 1,
  ACPBGetDialogKeyResp_FieldNumber_ErrorMessage = 2,
  ACPBGetDialogKeyResp_FieldNumber_DialogKeyVersion = 3,
  ACPBGetDialogKeyResp_FieldNumber_RetryUidArray = 4,
  ACPBGetDialogKeyResp_FieldNumber_Entry = 5,
  ACPBGetDialogKeyResp_FieldNumber_ServerSign = 6,
};

ACGPB_FINAL @interface ACPBGetDialogKeyResp : ACGPBMessage

/** GetDialogKeyRespCmdId = 0x60018015; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** dialogKey数据版本 */
@property(nonatomic, readwrite) int64_t dialogKeyVersion;

/** 未找到dialogKey的uid列表 */
@property(nonatomic, readwrite, strong, null_resettable) ACGPBInt64Array *retryUidArray;
/** The number of items in @c retryUidArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger retryUidArray_Count;

/** 有dialogKey的uid */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBAesKeyAndIV*> *entry;
/** The number of items in @c entry without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger entry_Count;

/** 服务器端签名 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *serverSign;

@end

#pragma mark - ACPBRecallPrivateChatMessageReq

typedef ACGPB_ENUM(ACPBRecallPrivateChatMessageReq_FieldNumber) {
  ACPBRecallPrivateChatMessageReq_FieldNumber_DestId = 1,
  ACPBRecallPrivateChatMessageReq_FieldNumber_MsgId = 2,
};

/**
 * 撤回消息 请求
 **/
ACGPB_FINAL @interface ACPBRecallPrivateChatMessageReq : ACGPBMessage

/** RecallPrivateChatMessageReqCmdId = 0x60011022; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

/** 待删除的消息id */
@property(nonatomic, readwrite) int64_t msgId;

@end

#pragma mark - ACPBRecallPrivateChatMessageResp

typedef ACGPB_ENUM(ACPBRecallPrivateChatMessageResp_FieldNumber) {
  ACPBRecallPrivateChatMessageResp_FieldNumber_ErrorCode = 1,
  ACPBRecallPrivateChatMessageResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBRecallPrivateChatMessageResp : ACGPBMessage

/** RecallPrivateChatMessageRespCmdId = 0x60018022; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBStartTypingPrivateChatReq

typedef ACGPB_ENUM(ACPBStartTypingPrivateChatReq_FieldNumber) {
  ACPBStartTypingPrivateChatReq_FieldNumber_DestId = 1,
};

/**
 * 开始正在输入
 **/
ACGPB_FINAL @interface ACPBStartTypingPrivateChatReq : ACGPBMessage

/** StartTypingPrivateChatReqCmdId = 0x60011020; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

@end

#pragma mark - ACPBStartTypingPrivateChatResp

typedef ACGPB_ENUM(ACPBStartTypingPrivateChatResp_FieldNumber) {
  ACPBStartTypingPrivateChatResp_FieldNumber_ErrorCode = 1,
  ACPBStartTypingPrivateChatResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBStartTypingPrivateChatResp : ACGPBMessage

/** StartTypingPrivateChatRespCmdId = 0x60018020; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBEndTypingPrivateChatReq

typedef ACGPB_ENUM(ACPBEndTypingPrivateChatReq_FieldNumber) {
  ACPBEndTypingPrivateChatReq_FieldNumber_DestId = 1,
};

/**
 * 结束正在输入
 **/
ACGPB_FINAL @interface ACPBEndTypingPrivateChatReq : ACGPBMessage

/** EndTypingPrivateChatReqCmdId = 0x60011021; */
@property(nonatomic, readwrite, copy, null_resettable) NSString *destId;

@end

#pragma mark - ACPBEndTypingPrivateChatResp

typedef ACGPB_ENUM(ACPBEndTypingPrivateChatResp_FieldNumber) {
  ACPBEndTypingPrivateChatResp_FieldNumber_ErrorCode = 1,
  ACPBEndTypingPrivateChatResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBEndTypingPrivateChatResp : ACGPBMessage

/** EndTypingPrivateChatRespCmdId = 0x60018021; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBSendPrivateChatArrivalAckReq

typedef ACGPB_ENUM(ACPBSendPrivateChatArrivalAckReq_FieldNumber) {
  ACPBSendPrivateChatArrivalAckReq_FieldNumber_ChatMessageArray = 1,
};

/**
 * 已到达对方手机回执
 **/
ACGPB_FINAL @interface ACPBSendPrivateChatArrivalAckReq : ACGPBMessage

/** SendPrivateChatArrivalAckReqCmdId = 0x60011023; */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<ACPBChatMessage*> *chatMessageArray;
/** The number of items in @c chatMessageArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger chatMessageArray_Count;

@end

#pragma mark - ACPBSendPrivateChatArrivalAckResp

typedef ACGPB_ENUM(ACPBSendPrivateChatArrivalAckResp_FieldNumber) {
  ACPBSendPrivateChatArrivalAckResp_FieldNumber_ErrorCode = 1,
  ACPBSendPrivateChatArrivalAckResp_FieldNumber_ErrorMessage = 2,
};

ACGPB_FINAL @interface ACPBSendPrivateChatArrivalAckResp : ACGPBMessage

/** SendPrivateChatArrivalAckRespCmdId = 0x60018023; */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@end

#pragma mark - ACPBGetNewSettingDialogListReq

typedef ACGPB_ENUM(ACPBGetNewSettingDialogListReq_FieldNumber) {
  ACPBGetNewSettingDialogListReq_FieldNumber_Time = 1,
};

/**
 * 根据时间获取dialog设置
 **/
ACGPB_FINAL @interface ACPBGetNewSettingDialogListReq : ACGPBMessage

/** 0x60018036 */
@property(nonatomic, readwrite) int64_t time;

@end

#pragma mark - ACPBGetNewSettingDialogListResp

typedef ACGPB_ENUM(ACPBGetNewSettingDialogListResp_FieldNumber) {
  ACPBGetNewSettingDialogListResp_FieldNumber_ErrorCode = 1,
  ACPBGetNewSettingDialogListResp_FieldNumber_ErrorMessage = 2,
  ACPBGetNewSettingDialogListResp_FieldNumber_BriefDialog = 3,
  ACPBGetNewSettingDialogListResp_FieldNumber_SetTime = 4,
};

ACGPB_FINAL @interface ACPBGetNewSettingDialogListResp : ACGPBMessage

/** 0x60018037 */
@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

/** Map<destId, BriefDialog> */
@property(nonatomic, readwrite, strong, null_resettable) NSMutableDictionary<NSString*, ACPBBriefDialog*> *briefDialog;
/** The number of items in @c briefDialog without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger briefDialog_Count;

/** 最新设置时间 */
@property(nonatomic, readwrite) int64_t setTime;

@end

#pragma mark - ACPBGetHistoryMessageReq

typedef ACGPB_ENUM(ACPBGetHistoryMessageReq_FieldNumber) {
  ACPBGetHistoryMessageReq_FieldNumber_DialogKeys = 1,
  ACPBGetHistoryMessageReq_FieldNumber_Offset = 2,
  ACPBGetHistoryMessageReq_FieldNumber_OldOffset = 3,
  ACPBGetHistoryMessageReq_FieldNumber_Rows = 4,
  ACPBGetHistoryMessageReq_FieldNumber_NewToOld = 5,
};

/**
 * 查询历史消息请求
 **/
ACGPB_FINAL @interface ACPBGetHistoryMessageReq : ACGPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *dialogKeys;

/** 较新的消息offset */
@property(nonatomic, readwrite) int64_t offset;

/** 老消息offset */
@property(nonatomic, readwrite) int64_t oldOffset;

@property(nonatomic, readwrite) int32_t rows;

@property(nonatomic, readwrite) BOOL newToOld;

@end

#pragma mark - ACPBGetHistoryMessageResp

typedef ACGPB_ENUM(ACPBGetHistoryMessageResp_FieldNumber) {
  ACPBGetHistoryMessageResp_FieldNumber_ErrorCode = 1,
  ACPBGetHistoryMessageResp_FieldNumber_ErrorMessage = 2,
  ACPBGetHistoryMessageResp_FieldNumber_Msg = 3,
  ACPBGetHistoryMessageResp_FieldNumber_IsEnd = 4,
};

/**
 * 查询历史消息响应
 **/
ACGPB_FINAL @interface ACPBGetHistoryMessageResp : ACGPBMessage

@property(nonatomic, readwrite) int32_t errorCode;

@property(nonatomic, readwrite, copy, null_resettable) NSString *errorMessage;

@property(nonatomic, readwrite, strong, null_resettable) ACPBDialogMessageList *msg;
/** Test to see if @c msg has been set. */
@property(nonatomic, readwrite) BOOL hasMsg;

@property(nonatomic, readwrite) BOOL isEnd;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
