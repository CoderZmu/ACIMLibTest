// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: acpb.global.structure.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if ACGPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/ACGPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "ACGPBProtocolBuffers_RuntimeSupport.h"
#endif

#import "AcpbGlobalStructure.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - AcpbGlobalStructureRoot

@implementation AcpbGlobalStructureRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - AcpbGlobalStructureRoot_FileDescriptor

static ACGPBFileDescriptor *AcpbGlobalStructureRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static ACGPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    ACGPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[ACGPBFileDescriptor alloc] initWithPackage:@""
                                                     syntax:ACGPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - ACPBBaseResp

@implementation ACPBBaseResp

@dynamic errorCode;
@dynamic errorMessage;

typedef struct ACPBBaseResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t errorCode;
  NSString *errorMessage;
} ACPBBaseResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBaseResp_FieldNumber_ErrorCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBBaseResp__storage_, errorCode),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "errorMessage",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBaseResp_FieldNumber_ErrorMessage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBBaseResp__storage_, errorMessage),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBBaseResp class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBBaseResp__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\t\000\002\014\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBAesKeyAndIV

@implementation ACPBAesKeyAndIV

@dynamic aesKey;
@dynamic aesIv;

typedef struct ACPBAesKeyAndIV__storage_ {
  uint32_t _has_storage_[1];
  NSString *aesKey;
  NSString *aesIv;
} ACPBAesKeyAndIV__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "aesKey",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBAesKeyAndIV_FieldNumber_AesKey,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBAesKeyAndIV__storage_, aesKey),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "aesIv",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBAesKeyAndIV_FieldNumber_AesIv,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBAesKeyAndIV__storage_, aesIv),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBAesKeyAndIV class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBAesKeyAndIV__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\006\000\002\004A\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBSystemCurrentTimeMillisReq

@implementation ACPBSystemCurrentTimeMillisReq


typedef struct ACPBSystemCurrentTimeMillisReq__storage_ {
  uint32_t _has_storage_[1];
} ACPBSystemCurrentTimeMillisReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBSystemCurrentTimeMillisReq class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:NULL
                                    fieldCount:0
                                   storageSize:sizeof(ACPBSystemCurrentTimeMillisReq__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBSystemCurrentTimeMillisResp

@implementation ACPBSystemCurrentTimeMillisResp

@dynamic errorCode;
@dynamic errorMessage;
@dynamic currentTimeMillis;

typedef struct ACPBSystemCurrentTimeMillisResp__storage_ {
  uint32_t _has_storage_[1];
  int32_t errorCode;
  NSString *errorMessage;
  int64_t currentTimeMillis;
} ACPBSystemCurrentTimeMillisResp__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "errorCode",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBSystemCurrentTimeMillisResp_FieldNumber_ErrorCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBSystemCurrentTimeMillisResp__storage_, errorCode),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "errorMessage",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBSystemCurrentTimeMillisResp_FieldNumber_ErrorMessage,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBSystemCurrentTimeMillisResp__storage_, errorMessage),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "currentTimeMillis",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBSystemCurrentTimeMillisResp_FieldNumber_CurrentTimeMillis,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ACPBSystemCurrentTimeMillisResp__storage_, currentTimeMillis),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBSystemCurrentTimeMillisResp class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBSystemCurrentTimeMillisResp__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\003\001\t\000\002\014\000\003\021\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBDialogMessage

@implementation ACPBDialogMessage

@dynamic msgId;
@dynamic localId;
@dynamic msgStatus;
@dynamic srcId;
@dynamic destId;
@dynamic isOut;
@dynamic senderCategory;
@dynamic msgCategory;
@dynamic msgPreContent;
@dynamic msgPostContent;
@dynamic mediaFlag;
@dynamic mediaConstructor;
@dynamic mediaAttribute;
@dynamic msgSendTime;
@dynamic burnAfterReadingFlag;
@dynamic atFlag;
@dynamic replyFlag;
@dynamic referenceFlag;
@dynamic msgIdReferenced;
@dynamic uploadFlag;
@dynamic burnAfterReadingTime;
@dynamic sharingGroupFlag;
@dynamic seqno;
@dynamic extra;
@dynamic msgContent;
@dynamic objectName;

typedef struct ACPBDialogMessage__storage_ {
  uint32_t _has_storage_[2];
  int32_t msgStatus;
  int32_t senderCategory;
  int32_t msgCategory;
  int32_t mediaConstructor;
  NSString *msgPreContent;
  NSString *msgPostContent;
  NSString *mediaAttribute;
  NSString *extra;
  NSData *msgContent;
  NSString *objectName;
  int64_t msgId;
  int64_t localId;
  int64_t srcId;
  int64_t destId;
  int64_t msgSendTime;
  int64_t msgIdReferenced;
  int64_t burnAfterReadingTime;
  int64_t seqno;
} ACPBDialogMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "localId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_LocalId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, localId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "msgStatus",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgStatus,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgStatus),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "srcId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_SrcId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, srcId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "destId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_DestId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, destId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "isOut",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_IsOut,
        .hasIndex = 5,
        .offset = 6,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "senderCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_SenderCategory,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, senderCategory),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "msgCategory",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgCategory,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgCategory),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "msgPreContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgPreContent,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgPreContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgPostContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgPostContent,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgPostContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "mediaFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MediaFlag,
        .hasIndex = 11,
        .offset = 12,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "mediaConstructor",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MediaConstructor,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, mediaConstructor),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "mediaAttribute",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MediaAttribute,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, mediaAttribute),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgSendTime,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgSendTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "burnAfterReadingFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_BurnAfterReadingFlag,
        .hasIndex = 16,
        .offset = 17,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "atFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_AtFlag,
        .hasIndex = 18,
        .offset = 19,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "replyFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_ReplyFlag,
        .hasIndex = 20,
        .offset = 21,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "referenceFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_ReferenceFlag,
        .hasIndex = 22,
        .offset = 23,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "msgIdReferenced",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgIdReferenced,
        .hasIndex = 24,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgIdReferenced),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "uploadFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_UploadFlag,
        .hasIndex = 25,
        .offset = 26,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "burnAfterReadingTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_BurnAfterReadingTime,
        .hasIndex = 27,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, burnAfterReadingTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "sharingGroupFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_SharingGroupFlag,
        .hasIndex = 28,
        .offset = 29,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "seqno",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_Seqno,
        .hasIndex = 30,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, seqno),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "extra",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_Extra,
        .hasIndex = 31,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, extra),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_MsgContent,
        .hasIndex = 32,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, msgContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBytes,
      },
      {
        .name = "objectName",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBDialogMessage_FieldNumber_ObjectName,
        .hasIndex = 33,
        .offset = (uint32_t)offsetof(ACPBDialogMessage__storage_, objectName),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBDialogMessage class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBDialogMessage__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\030\001\005\000\002\007\000\003\t\000\004\005\000\005\006\000\006\005\000\007\016\000\010\013\000\t\r\000\n\016\000\013\t\000\014\020\000\r\016\000"
        "\016\013\000\017\024\000\020\006\000\021\t\000\022\r\000\023\017\000\024\n\000\025\024\000\026\020\000\031\n\000\032\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBReferenceDialogMessage

@implementation ACPBReferenceDialogMessage

@dynamic msgId;
@dynamic srcId;
@dynamic srcName;
@dynamic destId;
@dynamic destName;
@dynamic msgPreContent;
@dynamic msgPostContent;
@dynamic mediaFlag;
@dynamic mediaConstructor;
@dynamic mediaAttribute;
@dynamic msgSendTime;

typedef struct ACPBReferenceDialogMessage__storage_ {
  uint32_t _has_storage_[1];
  int32_t mediaConstructor;
  NSString *srcName;
  NSString *destName;
  NSString *msgPreContent;
  NSString *msgPostContent;
  NSString *mediaAttribute;
  int64_t msgId;
  int64_t srcId;
  int64_t destId;
  int64_t msgSendTime;
} ACPBReferenceDialogMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "msgId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MsgId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, msgId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "srcId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_SrcId,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, srcId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "srcName",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_SrcName,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, srcName),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "destId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_DestId,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, destId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "destName",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_DestName,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, destName),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgPreContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MsgPreContent,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, msgPreContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgPostContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MsgPostContent,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, msgPostContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "mediaFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MediaFlag,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "mediaConstructor",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MediaConstructor,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, mediaConstructor),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "mediaAttribute",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MediaAttribute,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, mediaAttribute),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBReferenceDialogMessage_FieldNumber_MsgSendTime,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(ACPBReferenceDialogMessage__storage_, msgSendTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBReferenceDialogMessage class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBReferenceDialogMessage__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\013\001\005\000\002\005\000\003\007\000\004\006\000\005\010\000\006\r\000\007\016\000\010\t\000\t\020\000\n\016\000\013\013\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBBriefDialogMessage

@implementation ACPBBriefDialogMessage

@dynamic srcId;
@dynamic srcName;
@dynamic groupFlag;
@dynamic groupId;
@dynamic groupTitle;
@dynamic msgSendTime;
@dynamic atFlag;

typedef struct ACPBBriefDialogMessage__storage_ {
  uint32_t _has_storage_[1];
  NSString *srcName;
  NSString *groupTitle;
  int64_t srcId;
  int64_t groupId;
  int64_t msgSendTime;
} ACPBBriefDialogMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "srcId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_SrcId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBBriefDialogMessage__storage_, srcId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "srcName",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_SrcName,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBBriefDialogMessage__storage_, srcName),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "groupFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_GroupFlag,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "groupId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_GroupId,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(ACPBBriefDialogMessage__storage_, groupId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "groupTitle",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_GroupTitle,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(ACPBBriefDialogMessage__storage_, groupTitle),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "msgSendTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_MsgSendTime,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(ACPBBriefDialogMessage__storage_, msgSendTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "atFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialogMessage_FieldNumber_AtFlag,
        .hasIndex = 7,
        .offset = 8,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBBriefDialogMessage class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBBriefDialogMessage__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\001\005\000\002\007\000\003\t\000\004\007\000\005\n\000\006\013\000\007\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBFullDialog

@implementation ACPBFullDialog

@dynamic destId;
@dynamic dialogTitle;
@dynamic smallAvatarURL;
@dynamic backgroundImage;
@dynamic stickyFlag;
@dynamic muteFlag;
@dynamic blockFlag;
@dynamic burnAfterReadingFlag;
@dynamic takeScreenshotFlag;
@dynamic groupFlag;
@dynamic totalMemberNumber;
@dynamic groupMemberSmallAvatarURLArray, groupMemberSmallAvatarURLArray_Count;
@dynamic burnAfterReadingTime;

typedef struct ACPBFullDialog__storage_ {
  uint32_t _has_storage_[1];
  int32_t totalMemberNumber;
  NSString *destId;
  NSString *dialogTitle;
  NSString *smallAvatarURL;
  NSString *backgroundImage;
  NSMutableArray *groupMemberSmallAvatarURLArray;
  int64_t burnAfterReadingTime;
} ACPBFullDialog__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "destId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_DestId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, destId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "dialogTitle",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_DialogTitle,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, dialogTitle),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "smallAvatarURL",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_SmallAvatarURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, smallAvatarURL),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "backgroundImage",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_BackgroundImage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, backgroundImage),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "stickyFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_StickyFlag,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "muteFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_MuteFlag,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "blockFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_BlockFlag,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "burnAfterReadingFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_BurnAfterReadingFlag,
        .hasIndex = 10,
        .offset = 11,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "takeScreenshotFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_TakeScreenshotFlag,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "groupFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_GroupFlag,
        .hasIndex = 14,
        .offset = 15,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "totalMemberNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_TotalMemberNumber,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, totalMemberNumber),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "groupMemberSmallAvatarURLArray",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_GroupMemberSmallAvatarURLArray,
        .hasIndex = ACGPBNoHasBit,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, groupMemberSmallAvatarURLArray),
        .flags = (ACGPBFieldFlags)(ACGPBFieldRepeated | ACGPBFieldTextFormatNameCustom),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "burnAfterReadingTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBFullDialog_FieldNumber_BurnAfterReadingTime,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(ACPBFullDialog__storage_, burnAfterReadingTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBFullDialog class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBFullDialog__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\r\001\006\000\002\013\000\003\014!!\000\004\017\000\005\n\000\006\010\000\007\t\000\010\024\000\t\022\000\n\t\000\013\021\000\014\000gr"
        "oupMemberSmallAvatarUrl\000\r\024\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - ACPBBriefDialog

@implementation ACPBBriefDialog

@dynamic destId;
@dynamic dialogTitle;
@dynamic smallAvatarURL;
@dynamic backgroundImage;
@dynamic stickyFlag;
@dynamic muteFlag;
@dynamic blockFlag;
@dynamic burnAfterReadingFlag;
@dynamic takeScreenshotFlag;
@dynamic groupFlag;
@dynamic totalMemberNumber;
@dynamic groupMemberSmallAvatarURLArray, groupMemberSmallAvatarURLArray_Count;
@dynamic burnAfterReadingTime;
@dynamic dialogMenuContent;
@dynamic pushNotificationLevel;

typedef struct ACPBBriefDialog__storage_ {
  uint32_t _has_storage_[1];
  int32_t totalMemberNumber;
  int32_t pushNotificationLevel;
  NSString *destId;
  NSString *dialogTitle;
  NSString *smallAvatarURL;
  NSString *backgroundImage;
  NSMutableArray *groupMemberSmallAvatarURLArray;
  NSString *dialogMenuContent;
  int64_t burnAfterReadingTime;
} ACPBBriefDialog__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (ACGPBDescriptor *)descriptor {
  static ACGPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static ACGPBMessageFieldDescription fields[] = {
      {
        .name = "destId",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_DestId,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, destId),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "dialogTitle",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_DialogTitle,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, dialogTitle),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "smallAvatarURL",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_SmallAvatarURL,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, smallAvatarURL),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "backgroundImage",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_BackgroundImage,
        .hasIndex = 3,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, backgroundImage),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "stickyFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_StickyFlag,
        .hasIndex = 4,
        .offset = 5,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "muteFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_MuteFlag,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "blockFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_BlockFlag,
        .hasIndex = 8,
        .offset = 9,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "burnAfterReadingFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_BurnAfterReadingFlag,
        .hasIndex = 10,
        .offset = 11,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "takeScreenshotFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_TakeScreenshotFlag,
        .hasIndex = 12,
        .offset = 13,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "groupFlag",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_GroupFlag,
        .hasIndex = 14,
        .offset = 15,  // Stored in _has_storage_ to save space.
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeBool,
      },
      {
        .name = "totalMemberNumber",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_TotalMemberNumber,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, totalMemberNumber),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
      {
        .name = "groupMemberSmallAvatarURLArray",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_GroupMemberSmallAvatarURLArray,
        .hasIndex = ACGPBNoHasBit,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, groupMemberSmallAvatarURLArray),
        .flags = (ACGPBFieldFlags)(ACGPBFieldRepeated | ACGPBFieldTextFormatNameCustom),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "burnAfterReadingTime",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_BurnAfterReadingTime,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, burnAfterReadingTime),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt64,
      },
      {
        .name = "dialogMenuContent",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_DialogMenuContent,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, dialogMenuContent),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeString,
      },
      {
        .name = "pushNotificationLevel",
        .dataTypeSpecific.clazz = Nil,
        .number = ACPBBriefDialog_FieldNumber_PushNotificationLevel,
        .hasIndex = 19,
        .offset = (uint32_t)offsetof(ACPBBriefDialog__storage_, pushNotificationLevel),
        .flags = (ACGPBFieldFlags)(ACGPBFieldOptional | ACGPBFieldTextFormatNameCustom | ACGPBFieldClearHasIvarOnZero),
        .dataType = ACGPBDataTypeInt32,
      },
    };
    ACGPBDescriptor *localDescriptor =
        [ACGPBDescriptor allocDescriptorForClass:[ACPBBriefDialog class]
                                     rootClass:[AcpbGlobalStructureRoot class]
                                          file:AcpbGlobalStructureRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(ACGPBMessageFieldDescription))
                                   storageSize:sizeof(ACPBBriefDialog__storage_)
                                         flags:(ACGPBDescriptorInitializationFlags)(ACGPBDescriptorInitializationFlag_UsesClassRefs | ACGPBDescriptorInitializationFlag_Proto3OptionalKnown)];
#if !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\017\001\006\000\002\013\000\003\014!!\000\004\017\000\005\n\000\006\010\000\007\t\000\010\024\000\t\022\000\n\t\000\013\021\000\014\000gr"
        "oupMemberSmallAvatarUrl\000\r\024\000\016\021\000\017\025\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !ACGPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    #if defined(DEBUG) && DEBUG
      NSAssert(descriptor == nil, @"Startup recursed!");
    #endif  // DEBUG
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
